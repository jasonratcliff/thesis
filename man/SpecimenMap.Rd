% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maps.R
\name{SpecimenMap}
\alias{SpecimenMap}
\title{Specimen Mapping}
\description{
This R6 subclass inherits the \link{Specimen} superclass,
providing public methods to plot records by geographic coordinate.
Boundary shapefiles are downloaded from the US Census Bureau
Topologically Integrated Geographic Encoding and Referencing (TIGER)
database using \href{https://github.com/walkerke/tigris}{tigris}
(Walker 2016). Data are read in to R as simple features with the
\href{https://r-spatial.github.io/sf/}{sf} package (Pebesma 2018) and
transformed by \href{https://github.com/ateucher/rmapshaper}{rmapshaper}
(Teucher and Russell 2020) to simplify border polygons via the
Visvalingam algorithm.
}
\details{
\itemize{
\item \strong{\code{ggmap}}
}

The \href{#method-map}{\code{SpecimenMap$map()}}
method exposes an option to include satellite or
terrain rasters image from \code{\link[ggmap:get_map]{ggmap::get_map()}} as a baselayer to the specimen
distribution map. Access to the static maps requires API key registration.
Verify a key is set to the environment variable \code{GGMAP_GOOGLE_API_KEY}
using \code{\link[ggmap:register_google]{ggmap::has_google_key()}}. For options to register a key, see
\code{\link[ggmap:register_google]{ggmap::register_google()}} â€“ \emph{ensure private keys are kept confidential}.
See the \code{README} at \url{https://github.com/dkahle/ggmap} for more info.
\itemize{
\item \strong{\code{elevatr}}
}

Build base ggplot layer from digital elevation model data from AWS Open Data
Terrain Tiles via the \href{https://github.com/jhollist/elevatr}{elevatr} package.
Map terrain tiles pulled from:
\itemize{
\item \url{https://registry.opendata.aws/terrain-tiles/}
}
}
\examples{
voucher_map <- SpecimenMap$new(
  records = thesis::herbarium_specimens,
  identifier = "Taxon_a_posteriori"
)

voucher_map$filter_limit(
  west = -108, east = -105,
  north = 42, south = 39
)

# Base map type
voucher_map$map(
  .legend = "Reviewed Annotation",
  .borders = "black"
)

# Example `elevatr` wrapper
voucher_map$map(
  .legend = "Reviewed Annotation",
  .borders = "grey",
  baselayer = "elevatr"
)

## ------------------------------------------------
## Method `SpecimenMap$repel`
## ------------------------------------------------

voucher_map$map(
  baselayer = "ggmap",
  .borders = "white"
) +
voucher_map$repel(
  Nelson = c(49286, 49478),
  Kastning = c(1462, 1725),
  repel.params = list(
    xlim = c(-Inf, NA),
    ylim = c(-Inf, NA),
    segment.color = "#FFFFBF",
    segment.size = 0.75,
    segment.alpha = 1,
    arrow = grid::arrow(length = grid::unit(0.01, "npc")),
    box.padding = 0.5
  )
)
}
\references{
Hollister J, Shah T, Robitaille A, Beck M, Johnson M. 2021. \code{elevatr}:
Access Elevation Data from Various APIs. doi: 10.5281/zenodo.5809645.
R package version 0.4.2.
\url{https://github.com/jhollist/elevatr/}

Kahle D and Wickham H. 2013. \code{ggmap}: Spatial Visualization with \code{ggplot2}.
The R Journal. 5(1):144-161.
\url{https://doi.org/10.32614/RJ-2013-014}

Pebesma E. 2018. Simple Features for R: Standardized Support for Spatial
Vector Data. The R Journal. 10(1):438-446.
\url{https://doi.org/10.32614/RJ-2018-009}

Teucher A, Russell K. 2021. \code{rmapshaper}: Client for 'mapshaper' for
'Geospatial' operations. R package version 0.4.5.
\url{https://github.com/ateucher/rmapshaper}

Walker K. 2016. tigris: An R package to access and work with
geographic data from the US census bureau.
The R Journal. 8(2):231-242.
\url{https://doi.org/10.32614/RJ-2016-043}
}
\section{Super class}{
\code{\link[thesis:Specimen]{thesis::Specimen}} -> \code{SpecimenMap}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SpecimenMap-new}{\code{SpecimenMap$new()}}
\item \href{#method-SpecimenMap-features}{\code{SpecimenMap$features()}}
\item \href{#method-SpecimenMap-specimens}{\code{SpecimenMap$specimens()}}
\item \href{#method-SpecimenMap-scales}{\code{SpecimenMap$scales()}}
\item \href{#method-SpecimenMap-theme}{\code{SpecimenMap$theme()}}
\item \href{#method-SpecimenMap-map}{\code{SpecimenMap$map()}}
\item \href{#method-SpecimenMap-repel}{\code{SpecimenMap$repel()}}
\item \href{#method-SpecimenMap-clone}{\code{SpecimenMap$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="thesis" data-topic="Specimen" data-id="annotations"><a href='../../thesis/html/Specimen.html#method-Specimen-annotations'><code>thesis::Specimen$annotations()</code></a></span></li>
<li><span class="pkg-link" data-pkg="thesis" data-topic="Specimen" data-id="census"><a href='../../thesis/html/Specimen.html#method-Specimen-census'><code>thesis::Specimen$census()</code></a></span></li>
<li><span class="pkg-link" data-pkg="thesis" data-topic="Specimen" data-id="filter_collections"><a href='../../thesis/html/Specimen.html#method-Specimen-filter_collections'><code>thesis::Specimen$filter_collections()</code></a></span></li>
<li><span class="pkg-link" data-pkg="thesis" data-topic="Specimen" data-id="filter_limit"><a href='../../thesis/html/Specimen.html#method-Specimen-filter_limit'><code>thesis::Specimen$filter_limit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="thesis" data-topic="Specimen" data-id="filter_taxa"><a href='../../thesis/html/Specimen.html#method-Specimen-filter_taxa'><code>thesis::Specimen$filter_taxa()</code></a></span></li>
<li><span class="pkg-link" data-pkg="thesis" data-topic="Specimen" data-id="labels"><a href='../../thesis/html/Specimen.html#method-Specimen-labels'><code>thesis::Specimen$labels()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-new"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-new}{}}}
\subsection{Method \code{new()}}{
Construct record container \code{\link[R6:R6Class]{R6::R6Class()}}
subclass instance for geographic mapping.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$new(records, identifier)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{records}}{Specimen voucher records \code{\link[tibble:tibble]{tibble::tibble()}}.}

\item{\code{identifier}}{Name of \code{\link[=Specimen]{Specimen$records}} tibble variable for
filtering, annotations, and \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} aesthetics.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-features"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-features}{}}}
\subsection{Method \code{features()}}{
Layer census border shapefiles built from
\code{\link[tigris:states]{tigris::states()}} and \code{\link[tigris:counties]{tigris::counties()}} simple features.
Data layers for simple feature (sf) objects are enabled by
\code{\link[ggplot2:ggsf]{ggplot2::geom_sf()}}. Coordinate limits are set by the range of
lon/lat values in the \code{\link[=Specimen]{Specimen$records}} tibble.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$features(.borders = "black", .states = NULL, .expand = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.borders}}{Character scalar to set color of
county and state borders.}

\item{\code{.states}}{Additional character vector of states to layer
county borders onto map base.}

\item{\code{.expand}}{Boolean passed to \code{\link[ggplot2:ggsf]{ggplot2::coord_sf()}} to optionally expand
map coorinate limits. Set \code{FALSE} to prevent clipping of \code{ggmap} / \code{elevatr}
base layers.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of state / county \code{\link[ggplot2:ggsf]{ggplot2::geom_sf()}} and
\code{\link[ggplot2:ggsf]{ggplot2::coord_sf()}} ggproto objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-specimens"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-specimens}{}}}
\subsection{Method \code{specimens()}}{
Layer jitter geom of specimens from records tibble.
Color and shape aesthetics are set by the
\code{\link[=Specimen]{Specimen$identifier}} public field.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$specimens()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with \code{\link[ggplot2:geom_jitter]{ggplot2::geom_jitter()}} ggproto object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-scales"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-scales}{}}}
\subsection{Method \code{scales()}}{
Layer manual scale values for color and shape aesthetics.
Legend limits are subset to name values in
\code{\link[=Specimen]{Specimen$annotations()}} for
the set of species values indicated by \code{\link[=Specimen]{Specimen$identifier}}.
See \link{aesthetics} for scale value specifications.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$scales()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with \code{\link[ggplot2:scale_manual]{ggplot2::scale_color_manual()}} and
\code{\link[ggplot2:scale_manual]{ggplot2::scale_shape_manual()}} ggproto objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-theme"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-theme}{}}}
\subsection{Method \code{theme()}}{
Layer \code{\link[ggplot2:theme]{ggplot2::theme()}} specification and default scale labels.
Depends on \code{\link[ggtext:element_markdown]{ggtext::element_markdown()}} to set legend text for
italicized species annotations using HTML formatting.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$theme(.legend = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.legend}}{Character scalar to set legend title
for \code{color} and \code{shape} keys via \code{\link[ggplot2:labs]{ggplot2::labs()}}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of \code{\link[ggplot2:theme]{ggplot2::theme()}} and \code{\link[ggplot2:labs]{ggplot2::labs()}} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-map"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-map}{}}}
\subsection{Method \code{map()}}{
Build \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} distribution map from the
\code{\link[=Specimen]{Specimen$records}} field tibble. Color and shape aesthetics
are set by the \code{\link[=Specimen]{Specimen$identifier}} field.
Combines the public methods exposed by \link{SpecimenMap}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$map(
  .legend = self$identifier,
  .expand = FALSE,
  .borders = "black",
  .states = NULL,
  baselayer = c("base", "ggmap", "elevatr"),
  zoom = 7,
  center = NULL,
  maptype = "satellite"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.legend}}{Character scalar to set legend title
for \code{color} and \code{shape} keys via \code{\link[ggplot2:labs]{ggplot2::labs()}}.}

\item{\code{.expand}}{Boolean passed to \code{\link[ggplot2:ggsf]{ggplot2::coord_sf()}} to optionally expand
map coorinate limits. Set \code{FALSE} to prevent clipping of \code{ggmap} / \code{elevatr}
base layers.}

\item{\code{.borders}}{Character scalar to set color of
county and state borders.}

\item{\code{.states}}{Additional character vector of states to layer
county borders onto map base.}

\item{\code{baselayer}}{Specify map baselayer underlying county borders.
One of: \code{base}, \code{ggmap}, or \code{elevatr}.}

\item{\code{zoom}}{Integer passed to \code{\link[ggmap:get_map]{ggmap::get_map()}} argument \code{zoom}.}

\item{\code{center}}{Numeric vector of length 2 specifying x,y lon/lat centroid.
Default \code{NULL} centers map by \code{\link[=Specimen]{Specimen$records}} coordinate
range midpoints.}

\item{\code{maptype}}{Choice of \code{\link[ggmap:get_map]{ggmap::get_map()}} \code{maptype} argument.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Grid graphics / ggplot object to print specimen distribution.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-repel"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-repel}{}}}
\subsection{Method \code{repel()}}{
Layer botanist collection tags, wrapping over
\code{\link[ggrepel:geom_text_repel]{ggrepel::geom_label_repel()}} to plot repelled labels.
Design pattern to forward multiple plot arguments modelled after:
\itemize{
\item \url{https://ggplot2-book.org/programming.html#additional-arguments}
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$repel(..., vouchers = NULL, repel.params = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Collector / collection
sets passed to \code{\link[=Specimen]{Specimen$filter_collections()}}.}

\item{\code{vouchers}}{Specimen records \code{\link[tibble:tbl_df-class]{tbl_df}} to
specify subset of record collections. Requires columns \code{Collector},
\code{Collection_Number}, \code{Longitude}, and \code{Latitude} to construct labels.}

\item{\code{repel.params}}{Arg/value pairs passed on to
\code{\link[ggrepel:geom_text_repel]{ggrepel::geom_label_repel()}} to modify repelled labels.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{voucher_map$map(
  baselayer = "ggmap",
  .borders = "white"
) +
voucher_map$repel(
  Nelson = c(49286, 49478),
  Kastning = c(1462, 1725),
  repel.params = list(
    xlim = c(-Inf, NA),
    ylim = c(-Inf, NA),
    segment.color = "#FFFFBF",
    segment.size = 0.75,
    segment.alpha = 1,
    arrow = grid::arrow(length = grid::unit(0.01, "npc")),
    box.padding = 0.5
  )
)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SpecimenMap-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SpecimenMap-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SpecimenMap$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
