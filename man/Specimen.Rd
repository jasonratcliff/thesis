% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specimens.R
\name{Specimen}
\alias{Specimen}
\title{R6 Superclass Encapsulating Voucher Specimen Records}
\description{
The \code{Specimen} superclass facilitates analysis of voucher subsets by
instantiating a data structure with public methods for filtering and
annotating specimens. A core aspect of this class is the \code{Specimen$records}
public field, which contains a \code{\link[tibble:tibble]{tibble::tibble()}} data frame meant to
represent specimen records. Plotting  subsets is enabled by superclass
methods to filter by geographic coordinates, taxonomic annotation, and
collection information (i.e., collector and number). Visualization of
filtered specimen distributions is facilitated by methods to format
annotations for plot labels.
}
\examples{

## ------------------------------------------------
## Method `Specimen$new`
## ------------------------------------------------

# Initialize object instance from set of records with `new()` method.
specimens <- Specimen$new(
  records = thesis::vouchers,
  identifier = "scientificName"
)

class(specimens)

# Specimen records can be readily accessed from public `records` field.
class(specimens$records)

dim(specimens$records)

## ------------------------------------------------
## Method `Specimen$census`
## ------------------------------------------------

# Check basic record census of total and distinct specimens.
specimens$census()

## ------------------------------------------------
## Method `Specimen$filter_limit`
## ------------------------------------------------

# Subset records by geographic coordinates from cardinal headings.
clone <- specimens$clone()
dim(clone$records)

# Assign named character vector with cardinal headings to limit records.
headings <- c(west = -107, south = 39, east = -105, north = 41)

# By default, the `records` field is updated silently.
do.call(clone$filter_limit, args = as.list(headings))
dim(clone$records)

# Optionally, return tibble data frame with filtered records.
filtered <- clone$filter_limit(west = -106, .return = TRUE)
dim(filtered) # Note `tbl_df` class returned object

## ------------------------------------------------
## Method `Specimen$filter_taxa`
## ------------------------------------------------

# Filter specimens by taxonomic rank; here, reviewed specific epithets.
clone <- specimens$clone()
clone$filter_taxa(
  c("acutifolia", "floribunda", "vitulifera", "medicinae"),
  .identifier = "scientificName"
)
dim(clone$records)

# Further subset filtered records and return a separate tibble.
filtered <-
  clone$filter_taxa(
    "vitulifera",
    .identifier = "previousIdentifications",
    .return = TRUE
  )
dim(filtered)

## ------------------------------------------------
## Method `Specimen$filter_collections`
## ------------------------------------------------

clone <- specimens$clone()
clone$filter_collections(5068, "Rollins" = c(5145, 5146), "Mulligan")
clone$census()

clone$records[, c("recordedBy", "recordNumber")]

## ------------------------------------------------
## Method `Specimen$annotations`
## ------------------------------------------------

# Omit `.identifier` for default set by public field `self$identifier`.
clone <- specimens$clone()
clone$filter_taxa("didymocarpa")

# Use a different records tibble column to create named annotations.
clone$annotations(.identifier = "organismName")

## ------------------------------------------------
## Method `Specimen$labels`
## ------------------------------------------------

dna_vouchers <- dplyr::select(thesis::dna_specimens, ID_final) \%>\%
 dplyr::rename(label = ID_final) \%>\%
 Specimen$new(
   records = .,
   identifier = "ID_final"
 )

# Note length of the returned label vector equals the record row number.
length(dna_vouchers$labels())
unique(dna_vouchers$labels())
}
\seealso{
\link{SpecimenMap}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{records}}{A \code{\link[tibble:tbl_df-class]{tbl_df}} S3 class tibble data
frame containing a set of specimen vouchers. The \verb{filter_*} methods
can be chained to update this field or set to return data without
modifying the public \code{records} field.}

\item{\code{identifier}}{Character scalar denoting a default variable in
the \code{Specimen$records} field. For records with a \code{.identifier}
argument, this field is referenced when the optional argument is
omitted. The \code{identifier} field is used for operations involving a
specific set of taxonomic identifications (e.g., prior annotations),
including filtering and labelling methods.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Specimen-new}{\code{Specimen$new()}}
\item \href{#method-Specimen-census}{\code{Specimen$census()}}
\item \href{#method-Specimen-filter_limit}{\code{Specimen$filter_limit()}}
\item \href{#method-Specimen-filter_taxa}{\code{Specimen$filter_taxa()}}
\item \href{#method-Specimen-filter_collections}{\code{Specimen$filter_collections()}}
\item \href{#method-Specimen-annotations}{\code{Specimen$annotations()}}
\item \href{#method-Specimen-labels}{\code{Specimen$labels()}}
\item \href{#method-Specimen-clone}{\code{Specimen$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-new"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-new}{}}}
\subsection{Method \code{new()}}{
Construct a \code{Specimen} class container from voucher records.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$new(records, identifier)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{records}}{Specimen voucher records \code{\link[tibble:tibble]{tibble::tibble()}}.}

\item{\code{identifier}}{Character scalar for voucher annotation label variable.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Initialize object instance from set of records with `new()` method.
specimens <- Specimen$new(
  records = thesis::vouchers,
  identifier = "scientificName"
)

class(specimens)

# Specimen records can be readily accessed from public `records` field.
class(specimens$records)

dim(specimens$records)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-census"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-census}{}}}
\subsection{Method \code{census()}}{
Record census accounting of voucher specimens.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$census()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Reports two summations:
\itemize{
\item Total number of specimens \strong{including duplicate collections}
\item Number of \emph{distinct} specimen collections (i.e., excluding duplicates)
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Check basic record census of total and distinct specimens.
specimens$census()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-filter_limit"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-filter_limit}{}}}
\subsection{Method \code{filter_limit()}}{
Filter specimen records by geographic coordinate limits.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$filter_limit(
  west = NULL,
  south = NULL,
  east = NULL,
  north = NULL,
  .return = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{west}}{Filter records by \strong{minimum longitude} (min. x)}

\item{\code{south}}{Filter records by \strong{minimum latitude} (min. y)}

\item{\code{east}}{Filter records by \strong{maximum longitude} (max. x)}

\item{\code{north}}{Filter records by \strong{maximum latitude} (max. y)}

\item{\code{.return}}{Logical to return filtered records. By default, the public
field \code{Specimen$records} is updated silently to allow chaining subsequent
filtering operations. When \code{TRUE}, return the filtered records without
updating the public field.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method enables filtering records by minimum or maximum
coordinate limits using any combination of the four cardinal directions.
Each parameter sets the directional bound (min/max) to filter.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Subset records by geographic coordinates from cardinal headings.
clone <- specimens$clone()
dim(clone$records)

# Assign named character vector with cardinal headings to limit records.
headings <- c(west = -107, south = 39, east = -105, north = 41)

# By default, the `records` field is updated silently.
do.call(clone$filter_limit, args = as.list(headings))
dim(clone$records)

# Optionally, return tibble data frame with filtered records.
filtered <- clone$filter_limit(west = -106, .return = TRUE)
dim(filtered) # Note `tbl_df` class returned object
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-filter_taxa"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-filter_taxa}{}}}
\subsection{Method \code{filter_taxa()}}{
Filter specimen records by taxonomic annotations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$filter_taxa(..., .identifier = NULL, .return = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Taxonomic terms to filter
records against column designation by \code{.identifier} parameter.}

\item{\code{.identifier}}{Character scalar denoting \code{records} field variable
for filtering and annotation operations involving taxonomic identifications.}

\item{\code{.return}}{Logical to return filtered records. By default, the public
field \code{Specimen$records} is updated silently to allow chaining subsequent
filtering operations. When \code{TRUE}, return the filtered records without
updating the public field.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Given a \href{#public-fields}{\code{Specimen$records}} tibble, utilize
\emph{partial} string matching for taxonomic filtering of specimen records.
Flexibility is provided to query for e.g., multiple specific epithets.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Filter specimens by taxonomic rank; here, reviewed specific epithets.
clone <- specimens$clone()
clone$filter_taxa(
  c("acutifolia", "floribunda", "vitulifera", "medicinae"),
  .identifier = "scientificName"
)
dim(clone$records)

# Further subset filtered records and return a separate tibble.
filtered <-
  clone$filter_taxa(
    "vitulifera",
    .identifier = "previousIdentifications",
    .return = TRUE
  )
dim(filtered)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-filter_collections"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-filter_collections}{}}}
\subsection{Method \code{filter_collections()}}{
Filter specimen records by collector or collection number.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$filter_collections(..., .return = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Any number of collector
collections (i.e., numeric vector named by collector), collectors
(character scalars) or collection numbers (numeric scalars).}

\item{\code{.return}}{Logical to return filtered records. By default, the public
field \code{Specimen$records} is updated silently to allow chaining subsequent
filtering operations. When \code{TRUE}, return the filtered records without
updating the public field.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method uses dot collection via \code{\link[rlang:list2]{rlang::dots_list()}}, allowing for
flexible specification of various collector and collection combos.
Input arguments should take one of the following forms:
\itemize{
\item Numeric vector of collection numbers named by collector
\item Character scalar specifying a single collector string
\item Numeric scalar specifying a single collection number
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{clone <- specimens$clone()
clone$filter_collections(5068, "Rollins" = c(5145, 5146), "Mulligan")
clone$census()

clone$records[, c("recordedBy", "recordNumber")]
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-annotations"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-annotations}{}}}
\subsection{Method \code{annotations()}}{
Create markdown-formatted specimen annotations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$annotations(.identifier = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.identifier}}{Character scalar denoting \code{records} field variable
for filtering and annotation operations involving taxonomic identifications.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Used for plotting \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} manual scale values with italicized
fonts via the \code{\link[ggtext:element_markdown]{ggtext::element_markdown()}} extension.
}

\subsection{Returns}{
Named list of markdown- (i.e., HTML) formatted annotations.
Length equals number of unique values in the \code{.identifier} field.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# Omit `.identifier` for default set by public field `self$identifier`.
clone <- specimens$clone()
clone$filter_taxa("didymocarpa")

# Use a different records tibble column to create named annotations.
clone$annotations(.identifier = "organismName")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-labels"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-labels}{}}}
\subsection{Method \code{labels()}}{
Create base expression specimen labels.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$labels(.identifier = "label")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.identifier}}{Character scalar denoting \code{records} field variable
for filtering and annotation operations involving taxonomic identifications.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of expressions for parsed font labels.
Length equivalent to length of the records \code{label} variable.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{dna_vouchers <- dplyr::select(thesis::dna_specimens, ID_final) \%>\%
 dplyr::rename(label = ID_final) \%>\%
 Specimen$new(
   records = .,
   identifier = "ID_final"
 )

# Note length of the returned label vector equals the record row number.
length(dna_vouchers$labels())
unique(dna_vouchers$labels())
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Specimen-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Specimen-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Specimen$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
